definitions:
  gotype.User:
    properties:
      name:
        type: string
      password:
        description: hash
        type: string
    required:
    - name
    - password
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.refreshStruct:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for GoType game and website
  title: GoType App API
  version: 0.0.1
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: authorize using login and password
      operationId: login
      parameters:
      - description: login and password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/gotype.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.refreshStruct'
        "400":
          description: 'Possible messages: ERR_INVALID_INPUT - Wrong structure of
            input json'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_NO_SUCH_USER - User with such name
            and password does not exist; ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: get new access token and refresh token by existing access token
        and refresh token
      operationId: refresh
      parameters:
      - description: RefreshToken and AccessToken
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.refreshStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.refreshStruct'
        "400":
          description: 'Possible messages: ERR_INVALID_INPUT - Wrong structure of
            input json'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_NO_SUCH_USER - User with id as in refresh
            token does not exist; ERR_INTERNAL - Error on server; ERR_ACCESS_TOKEN_WRONG
            - Wrong access token; ERR_REFRESH_TOKEN_WRONG - Wrong refresh token; ERR_UNAUTHORIZED
            - Refresh token expired; '
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Refresh
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: create new account
      operationId: create-account
      parameters:
      - description: new account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/gotype.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.refreshStruct'
        "400":
          description: 'Possible messages: ERR_INVALID_INPUT - Wrong structure of
            input json'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_USER_EXISTS - User with such name already
            exists; ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Register
      tags:
      - auth
  /user-actions/get_user_info:
    get:
      consumes:
      - application/json
      description: Get username by id
      operationId: get_user_info
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - There is no id
            in token payload'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired
            or absent; ERR_ACCESS_TOKEN_WRONG - Wrong structure of Access Token'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_NO_SUCH_USER - User with such id not
            found; ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get User Info
      tags:
      - user-actions
  /user-actions/logout:
    post:
      consumes:
      - application/json
      description: Expire refreshToken manually
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - There is no id
            in token payload'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired
            or absent; ERR_ACCESS_TOKEN_WRONG - Wrong structure of Access Token'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_NO_SUCH_USER - User with such id not
            found; ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Logout
      tags:
      - user-actions
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
