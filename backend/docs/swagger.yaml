definitions:
  entities.ChangeUserAccess:
    properties:
      id:
        type: integer
      new_access:
        type: integer
    required:
    - id
    - new_access
    type: object
  entities.LevelBan:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  entities.LevelComplaint:
    properties:
      author_id:
        type: integer
      level_id:
        type: integer
      message:
        type: string
      reason:
        type: string
    required:
    - author_id
    - level_id
    - message
    - reason
    type: object
  entities.User:
    properties:
      name:
        type: string
      password:
        description: hash
        type: string
    required:
    - name
    - password
    type: object
  entities.UserBan:
    properties:
      ban_reason:
        type: string
      ban_time:
        type: string
      id:
        type: integer
    required:
    - ban_reason
    - ban_time
    - id
    type: object
  entities.UserComplaint:
    properties:
      author_id:
        type: integer
      message:
        type: string
      reason:
        type: string
      user_id:
        type: integer
    required:
    - author_id
    - message
    - reason
    - user_id
    type: object
  entities.UserUnban:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.getUserInfoStruct:
    properties:
      access:
        type: integer
      ban_reason:
        type: string
      ban_time:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  handler.refreshStruct:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for GoType game and website
  title: GoType App API
  version: 0.0.1
paths:
  /admin/ban-level:
    post:
      consumes:
      - application/json
      description: Ban level with given id. Available only for moderators and admins
      operationId: ban-level
      parameters:
      - description: id of level you want to ban
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.LevelBan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - Wrong structure
            of Access Token/No Access Token; ERR_ENTITY_NOT_FOUND - Level with such
            id does not exist; ERR_INVALID_INPUT - Wrong structure of input json;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired;
            ERR_PERMISSION_DENIED - Not enough rights to perform the action'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Ban level
      tags:
      - admin
  /admin/ban-user:
    post:
      consumes:
      - application/json
      description: Ban user with given id if your access is greater than theirs. Available
        only for moderators and admins
      operationId: ban-user
      parameters:
      - description: id of user you want to ban, duration of ban (format 10h), ban_reason
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.UserBan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - Wrong structure
            of Access Token/No Access Token; ERR_NO_SUCH_USER - User with such id
            does not exist; ERR_INVALID_INPUT - Wrong structure of input json/Wrong
            format of ban duration;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired;
            ERR_PERMISSION_DENIED - Not enough rights to perform the action'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Ban user
      tags:
      - admin
  /admin/change-user-access:
    post:
      consumes:
      - application/json
      description: Change access of a user if your access is greater that theirs.
        New value must be less than admin's one. Available only for moderators and
        admins
      operationId: change-user-access
      parameters:
      - description: id of user you want to ban, new value of access
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.ChangeUserAccess'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - Wrong structure
            of Access Token/No Access Token; ERR_NO_SUCH_USER - User with such id
            does not exist; ERR_INVALID_INPUT - Wrong structure of input json;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired;
            ERR_PERMISSION_DENIED - Not enough rights to perform the action'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Change access level
      tags:
      - admin
  /admin/unban-level:
    post:
      consumes:
      - application/json
      description: Unban level with given id. Available only for moderators and admins
      operationId: unban-level
      parameters:
      - description: id of level you want to unban
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.LevelBan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - Wrong structure
            of Access Token/No Access Token; ERR_ENTITY_NOT_FOUND - Level with such
            id does not exist; ERR_INVALID_INPUT - Wrong structure of input json;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired;
            ERR_PERMISSION_DENIED - Not enough rights to perform the action'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Unban level
      tags:
      - admin
  /admin/unban-user:
    post:
      consumes:
      - application/json
      description: Unban user with given id if your access is greater than theirs.
        Available only for moderators and admins
      operationId: unban-user
      parameters:
      - description: id of user you want to unban
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.UserUnban'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - Wrong structure
            of Access Token/No Access Token; ERR_NO_SUCH_USER - User with such id
            does not exist; ERR_INVALID_INPUT - Wrong structure of input json;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired;
            ERR_PERMISSION_DENIED - Not enough rights to perform the action'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Unban user
      tags:
      - admin
  /auth/login:
    post:
      consumes:
      - application/json
      description: authorize using login and password
      operationId: login
      parameters:
      - description: login and password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.refreshStruct'
        "400":
          description: 'Possible messages: ERR_INVALID_INPUT - Wrong structure of
            input json; ERR_NO_SUCH_USER - User with such name and password does not
            exist;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server; '
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: get new access token and refresh token by existing access token
        and refresh token
      operationId: refresh
      parameters:
      - description: RefreshToken and AccessToken
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.refreshStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.refreshStruct'
        "400":
          description: 'Possible messages: ERR_INVALID_INPUT - Wrong structure of
            input json; ERR_NO_SUCH_USER - User with id as in access token does not
            exist; ERR_ACCESS_TOKEN_WRONG - Wrong access token; ERR_REFRESH_TOKEN_WRONG
            - Wrong refresh token;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Refresh token expired;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server; '
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Refresh
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: create new account
      operationId: create-account
      parameters:
      - description: new account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.refreshStruct'
        "400":
          description: 'Possible messages: ERR_INVALID_INPUT - Wrong structure of
            input json; ERR_USER_EXISTS - User with such name already exists;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server; '
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Register
      tags:
      - auth
  /user-actions/get-user-info:
    get:
      consumes:
      - application/json
      description: Get username by id
      operationId: get-user-info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getUserInfoStruct'
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - There is no id
            in token payload/Wrong structure of Access Token/No Access Token; ERR_NO_SUCH_USER
            - User with such id not found;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get User Info
      tags:
      - user-actions
  /user-actions/logout:
    post:
      consumes:
      - application/json
      description: Expire refreshToken manually
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - There is no id
            in token payload/Wrong structure of Access Token/No Access Token; ERR_NO_SUCH_USER
            - User with such id not found;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Logout
      tags:
      - user-actions
  /user-actions/write-level-complaint:
    post:
      consumes:
      - application/json
      description: 'Send level complaint to server. Possible Reason values: Offencive
        name, Offencive video, Offencive audio, Offencive text'
      operationId: write-level-complaint
      parameters:
      - description: new complaint info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.LevelComplaint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - Wrong structure
            of Access Token/No Access Token; ERR_INVALID_INPUT - Wrong structure of
            input json/Invalid Reason;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Write Level Complaint
      tags:
      - user-actions
  /user-actions/write-user-complaint:
    post:
      consumes:
      - application/json
      description: 'Send user complaint to server. Possible Reason values: Cheating,
        Offencive nickname, Unsportsmanlike conduct'
      operationId: write-user-complaint
      parameters:
      - description: new complaint info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.UserComplaint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: 'Possible messages: ERR_ACCESS_TOKEN_WRONG - Wrong structure
            of Access Token/No Access Token; ERR_INVALID_INPUT - Wrong structure of
            input json/Invalid Reason;'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: 'Possible messages: ERR_UNAUTHORIZED - Access Token expired'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: 'Possible messages: ERR_INTERNAL - Error on server'
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Write User Complaint
      tags:
      - user-actions
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
