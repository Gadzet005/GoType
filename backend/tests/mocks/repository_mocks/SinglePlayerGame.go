// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	domain "github.com/Gadzet005/GoType/backend/internal/domain/Statistics"
	mock "github.com/stretchr/testify/mock"
)

// SinglePlayerGame is an autogenerated mock type for the SinglePlayerGame type
type SinglePlayerGame struct {
	mock.Mock
}

// SendResults provides a mock function with given fields: lc, totalPush, totalErr
func (_m *SinglePlayerGame) SendResults(lc domain.LevelComplete, totalPush int, totalErr int) error {
	ret := _m.Called(lc, totalPush, totalErr)

	if len(ret) == 0 {
		panic("no return value specified for SendResults")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.LevelComplete, int, int) error); ok {
		r0 = rf(lc, totalPush, totalErr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSinglePlayerGame creates a new instance of SinglePlayerGame. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSinglePlayerGame(t interface {
	mock.TestingT
	Cleanup(func())
}) *SinglePlayerGame {
	mock := &SinglePlayerGame{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
