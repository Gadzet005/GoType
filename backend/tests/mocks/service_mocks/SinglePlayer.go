// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	domain "github.com/Gadzet005/GoType/backend/internal/domain/Statistics"
	mock "github.com/stretchr/testify/mock"
)

// SinglePlayer is an autogenerated mock type for the SinglePlayer type
type SinglePlayer struct {
	mock.Mock
}

// SendResults provides a mock function with given fields: senderID, lc
func (_m *SinglePlayer) SendResults(senderID int, lc domain.LevelComplete) error {
	ret := _m.Called(senderID, lc)

	if len(ret) == 0 {
		panic("no return value specified for SendResults")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(int, domain.LevelComplete) error); ok {
		r0 = rf(senderID, lc)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSinglePlayer creates a new instance of SinglePlayer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSinglePlayer(t interface {
	mock.TestingT
	Cleanup(func())
}) *SinglePlayer {
	mock := &SinglePlayer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
